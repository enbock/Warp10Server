/*
 * Warp10Admin
 *
 *  Created on: 11.06.2011
 *      Author: Endre Bock
 */

#ifndef WARP10ADMIN_
#define WARP10ADMIN_

#include <Object>
#include <NetworkService>
#include <NetworkTransferHandler>

namespace u
{
	void programExit();
	extern Object *__main__;

	/**
	 * Event handler.
	 * <p>This function handles the signal from the operating system and calls
	 * specified events.<br>
	 * In follow the list of activies for the signals:
	 * <ul>
	 * 	<li> SIGINT - Terminate the program and abort all connection.</li>
	 * </ul>
	 * </p>
	 */
	void Warp10Admin_OSEventHandler(int signalNumber);

	/**
	 * Cli administration client for the server.
	 */
	class Warp10Admin : public RoomOwner
	{
		protected:
			/**
			 * Network service object.
			 */
			NetworkService _network;

			/**
			 * Connections of the server.
			 */
			NetworkConnection* _connection;

			/**
			 * Handles the network transfer.
			 */
			NetworkTransferHandler* _handler;

			/**
			 * Ready connection.
			 */
			bool _connectionIsReady;

		public:
			/**
			 * Main program of the admin.
			 */
			Warp10Admin(Vector<String> arg);

			/**
			 * Destructor.
			 */
			~Warp10Admin();

			/**
			 * Classname.
			 */
			String className();

			/**
			 * Destroy this object.
			 */
			void destroy();

			/**
			 * Stops the connection and shutdown the application.
			 */
			void shutdown();

			/**
			 * Dump info.
			 */
			String toString();

		protected:
			/**
			 * New created connection.
			 */
			void onConnection(Object* arg);

			/**
			 * Creating of new connection failed.
			 * @param Event object.
			 */
			void onConnectionFailed(Object *arg);

			/**
			 * Connection has finished close(or never connected).
			 */
			void onClosed(Object* arg);

			/**
			 * Stop the program.
			 */
			void programExit();

			/**
			 * Event from connection, that transfer can be start.
			 */
			void onReadyConnection(Object* arg);

			/**
			 * Server closed the connection.
			 * @param arg The signal object.
			 */
			void onServerClose(Object* arg);

			/**
			 * Start the command line interface.
			 */
			void startCLI();

			/**
			 * Start the shutdown procesdure of the server.
			 */
			void shutdownServer();
	};
}

#endif /* WARP10ADMIN_ */
